name: Robust Rules Sync
on:
  workflow_dispatch:
  push:
    paths:
      - 'rules-list.txt'
  schedule:
    - cron: '0 4 * * *'

env:
  URL_LIST_FILE: 'rules-list.txt'
  TARGET_DIR: 'rules'
  PATH_SEGMENTS: 2

jobs:
  sync-rules:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          path: repo

      - name: Validate URLs
        working-directory: repo
        run: |
          echo "=== URL有效性检查 ==="
          while IFS= read -r url; do
            [[ -z "$url" || "$url" == \#* ]] && continue
            if ! curl --head --fail -sS "$url" >/dev/null; then
              echo "::error::无效URL: $url"
              exit 1
            fi
          done < "${{ env.URL_LIST_FILE }}"

      - name: Process URLs
        working-directory: repo
        run: |
          mkdir -p "${{ env.TARGET_DIR }}"
          
          while IFS= read -r raw_url; do
            [[ -z "$raw_url" || "$raw_url" == \#* ]] && continue

            # URL标准化处理
            clean_url=$(echo "$raw_url" | awk '{print $1}' | sed 's/[[:space:]]*$//')
            url_path="${clean_url%/*}"
            filename="${clean_url##*/}"

            # 路径特征码生成
            path_parts=($(echo "$url_path" | awk -F/ '{for(i=4;i<=NF;i++) print $i}'))
            if [ ${#path_parts[@]} -ge ${{ env.PATH_SEGMENTS }} ]; then
              signature=$(IFS=_ ; echo "${path_parts[*]: -${{ env.PATH_SEGMENTS }}}")
            else
              signature="${path_parts[-1]}"
            fi

            # 构建安全文件名
            safe_name="${signature}_${filename}"
            safe_name=$(echo "$safe_name" | tr -cd 'a-zA-Z0-9_.-' | sed 's/^\.//')
            output_path="${{ env.TARGET_DIR }}/$safe_name"

            echo "下载: $clean_url → $output_path"
            if ! curl -fL "$clean_url" -o "$output_path"; then
              echo "::error::下载失败: $clean_url"
              exit 1
            fi
          done < "${{ env.URL_LIST_FILE }}"

      - name: Verify files
        working-directory: repo
        run: |
          echo "=== 下载文件验证 ==="
          ls -l "${{ env.TARGET_DIR }}"
          echo "文件总数: $(ls "${{ env.TARGET_DIR }}" | wc -l)"

      - name: Commit changes
        working-directory: repo
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name "Auto Sync"
            git config user.email "auto@sync"
            git add "${{ env.TARGET_DIR }}"
            git commit -m "🔄 更新规则文件 $(date +%F)"
            git push
          else
            echo "没有文件变更需要提交"
          fi
