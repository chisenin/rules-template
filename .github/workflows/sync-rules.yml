name: Persistent Rules Sync
on:
  workflow_dispatch:
  push:
    paths:
      - 'rules-list.txt'
  schedule:
    - cron: '0 4 * * *'

env:
  URL_LIST_FILE: 'rules-list.txt'
  TARGET_DIR: './rules'  # 明确相对路径
  MAX_RETRY: 2

jobs:
  sync-rules:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: repo  # 指定检出到repo子目录

      - name: Verify workspace
        run: |
          echo "工作区路径: ${{ github.workspace }}"
          echo "仓库路径: ${{ github.workspace }}/repo"
          ls -la ${{ github.workspace }}/repo

      - name: Create target directory
        run: |
          mkdir -p "${{ github.workspace }}/repo/${{ env.TARGET_DIR }}"
          echo "目标目录结构："
          tree -d ${{ github.workspace }}/repo

      - name: Download files
        working-directory: ${{ github.workspace }}/repo  # 关键！锁定工作目录
        run: |
          while IFS= read -r raw_url; do
            [[ -z "$raw_url" || "$raw_url" == \#* ]] && continue

            # 路径解析逻辑...
            output_path="${{ env.TARGET_DIR }}/$final_name"

            # 带路径验证的下载
            echo "下载到: $(pwd)/$output_path"
            if curl -fL "$clean_url" -o "$output_path"; then
              echo "✅ 文件已保存到仓库目录"
            fi
          done < "${{ github.workspace }}/repo/${{ env.URL_LIST_FILE }}"

      - name: Commit changes
        working-directory: ${{ github.workspace }}/repo
        run: |
          echo "=== 提交前文件状态 ==="
          git status --porcelain "${{ env.TARGET_DIR }}"
          
          git add "${{ env.TARGET_DIR }}"
          if ! git diff --quiet --exit-code; then
            git commit -m "🔄 更新规则文件"
            git push
            echo "变更已提交到仓库"
          fi

      - name: Post-sync verification
        run: |
          echo "=== 最终目录验证 ==="
          ls -lR ${{ github.workspace }}/repo/${{ env.TARGET_DIR }}
