name: Sync Rules

on:
  # 手动触发
  workflow_dispatch:
  # 每天 4:00 自动触发
  schedule:
    - cron: '0 4 * * *'
  # rules-list.txt 文件变动时触发
  push:
    paths:
      - 'rules-list.txt'

jobs:
  sync-rules:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 定义变量
      - name: Set variables
        id: set-variables
        run: |
          echo "url_list_file=rules-list.txt" >> $GITHUB_OUTPUT
          echo "output_folder=rules" >> $GITHUB_OUTPUT

      - name: Read URL list
        id: read-url-list
        run: |
          url_list_file="${{ steps.set-variables.outputs.url_list_file }}"
          urls=$(cat $url_list_file)
          echo "urls=$urls" >> $GITHUB_OUTPUT

      - name: Create output folder
        run: |
          output_folder="${{ steps.set-variables.outputs.output_folder }}"
          mkdir -p $output_folder

      - name: Sync files
        run: |
          output_folder="${{ steps.set-variables.outputs.output_folder }}"
          IFS=$'\n'
          for url in ${{ steps.read-url-list.outputs.urls }}; do
            # 提取文件名和路径信息
            filename=$(basename $url)
            path_part=$(dirname $url | awk -F '/' '{print $NF}')
            new_filename="${path_part}-${filename}"
            output_file="${output_folder}/${new_filename}"

            # 检查文件是否需要更新
            if [ -f "$output_file" ]; then
              existing_sha=$(sha256sum $output_file | awk '{print \$1}')
              remote_sha=$(curl -sL $url | sha256sum | awk '{print \$1}')
              if [ "$existing_sha" = "$remote_sha" ]; then
                echo "File $new_filename is up-to-date. Skipping."
                continue
              fi
            fi

            # 下载文件
            echo "Downloading $url to $output_file"
            if! curl -sL $url -o $output_file; then
              echo "Failed to download $url. Skipping."
            fi
          done
